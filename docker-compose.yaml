version: "3.8"

services:
  web:
    build: .
    command: sh -c "echo 'HOST=db' >> .env && python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/projecthabittracker
      - static_volume:/projecthabittracker/static
      - media_volume:/projecthabittracker/media
    env_file:
      - .env
    environment:
      - HOST=db
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"


  nginx:
    image: nginx:stable-alpine
    container_name: nginx_proxy_projecthabittracker
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/usr/share/nginx/html/static
      - media_volume:/media
    depends_on:
      - web

  db:
    image: postgres:16.0
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=15111983
      - POSTGRES_DB=training
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 30s
      timeout: 10s
      retries: 5
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis_projecthabittracker
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 5

  celery:
    build: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/projecthabittracker
    environment:
      - HOST=db
    env_file:
      - .env
    depends_on:
      - db
      - redis

  celery_beat:
    build: .
    command: sh -c "echo 'HOST=db' >> .env && celery -A config beat --loglevel=info"
    volumes:
      - .:/projecthabittracker
    environment:
      - HOST=db
    env_file:
      - .env
    depends_on:
      - web
      - db
      - redis
      - celery

volumes:
  postgres_data:
  static_volume:
  media_volume:
  redis_data: